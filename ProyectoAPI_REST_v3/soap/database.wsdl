<definitions name="UserService"
             targetNamespace="http://localhost:5000/user-service"
             xmlns="http://schemas.xmlsoap.org/wsdl/"
             xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
             xmlns:tns="http://localhost:5000/user-service">

  <types>
    <xsd:schema targetNamespace="http://localhost:5000/user-service"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:element name="user" type="tns:user"/>
      <xsd:complexType name="user">
        <xsd:sequence>
          <xsd:element name="username" type="xsd:string"/>
          <xsd:element name="password" type="xsd:string"/>
          <xsd:element name="email" type="xsd:string"/>
          <xsd:element name="name" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      

      <xsd:element name="createUserRequest" type="tns:createUserRequest"/>
      <xsd:complexType name="createUserRequest">
        <xsd:sequence>
          <xsd:element name="user" type="tns:user"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="createUserResponse" type="tns:createUserResponse"/>
      <xsd:complexType name="createUserResponse">
        <xsd:sequence>
          <xsd:element name="user" type="tns:user"/>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:element name="getUserRequest" type="tns:getUserRequest"/>
      <xsd:complexType name="getUserRequest">
        <xsd:sequence>
          <xsd:element name="authToken" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getUserResponse" type="tns:getUserResponse"/>
      <xsd:complexType name="getUserResponse">
        <xsd:sequence>
          <xsd:element name="user" type="tns:user"/>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:element name="updateUserRequest" type="tns:updateUserRequest"/>
      <xsd:complexType name="updateUserRequest">
        <xsd:sequence>
          <xsd:element name="authToken" type="xsd:string"/>
          <xsd:element name="user" type="tns:user"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="updateUserResponse" type="tns:updateUserResponse"/>
      <xsd:complexType name="updateUserResponse">
        <xsd:sequence>
          <xsd:element name="user" type="tns:user"/>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:element name="deleteUserRequest" type="tns:deleteUserRequest"/>
      <xsd:complexType name="deleteUserRequest">
        <xsd:sequence>
          <xsd:element name="authToken" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="deleteUserResponse" type="tns:deleteUserResponse"/>
      <xsd:complexType name="deleteUserResponse">
        <xsd:sequence>
          <xsd:element name="username" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:element name="getPasswordRequest" type="tns:getPasswordRequest"/>
      <xsd:complexType name="getPasswordRequest">
        <xsd:sequence>
          <xsd:element name="username" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getPasswordResponse" type="tns:getPasswordResponse"/>
      <xsd:complexType name="getPasswordResponse">
        <xsd:sequence>
          <xsd:element name="password" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:element name="setAuthTokenRequest" type="tns:setAuthTokenRequest"/>
      <xsd:complexType name="setAuthTokenRequest">
        <xsd:sequence>
          <xsd:element name="username" type="xsd:string"/>
          <xsd:element name="authToken" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="setAuthTokenResponse" type="tns:setAuthTokenResponse"/>
      <xsd:complexType name="setAuthTokenResponse">
        <xsd:sequence>
          <xsd:element name="authToken" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>

    </xsd:schema>
  </types>

  <message name="createUserRequest">
    <part name="request" element="tns:createUserRequest"/>
  </message>
  <message name="createUserResponse">
    <part name="response" element="tns:createUserResponse"/>
  </message>

  <message name="updateUserRequest">
    <part name="request" element="tns:updateUserRequest"/>
  </message>
  <message name="updateUserResponse">
    <part name="response" element="tns:user"/>
  </message>

  <message name="deleteUserRequest">
    <part name="request" element="tns:deleteUserRequest"/>
  </message>
  <message name="deleteUserResponse">
    <part name="response" element="tns:deleteUserResponse"/>
  </message>

  <message name="getPasswordRequest">
    <part name="request" element="tns:getPasswordRequest"/>
  </message>
  <message name="getPasswordResponse">
    <part name="response" element="tns:getPasswordResponse"/>
  </message>

  <message name="getUserRequest">
    <part name="request" element="tns:getUserRequest"/>
  </message>
  <message name="getUserResponse">
    <part name="response" element="tns:getUserResponse"/>
  </message>

  <message name="setAuthTokenRequest">
    <part name="request" element="tns:setAuthTokenRequest"/>
  </message>
  <message name="setAuthTokenResponse">
    <part name="response" element="tns:setAuthTokenResponse"/>
  </message>

  <portType name="UserServicePortType">
    <operation name="createUser">
      <input message="tns:createUserRequest"/>
      <output message="tns:createUserResponse"/>
    </operation>
    <operation name="updateUser">
      <input message="tns:updateUserRequest"/>
      <output message="tns:updateUserResponse"/>
    </operation>
    <operation name="deleteUser">
      <input message="tns:deleteUserRequest"/>
      <output message="tns:deleteUserResponse"/>
    </operation>
    <operation name="getPassword">
      <input message="tns:getPasswordRequest"/>
      <output message="tns:getPasswordResponse"/>
    </operation>
    <operation name="getUser">
      <input message="tns:getUserRequest"/>
      <output message="tns:getUserResponse"/>
    </operation>
    <operation name="setAuthToken">
      <input message="tns:setAuthTokenRequest"/>
      <output message="tns:setAuthTokenResponse"/>
    </operation>
  </portType>

  <binding name="UserServiceBinding" type="tns:UserServicePortType">
    <soap:binding style="document"
                  transport="http://schemas.xmlsoap.org/soap/http"/>

    <operation name="createUser">
      <soap:operation soapAction="http://localhost:5000/user-service/createUser"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>

    <operation name="updateUser">
      <soap:operation soapAction="http://localhost:5000/user-service/updateUser"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>

    <operation name="deleteUser">
      <soap:operation soapAction="http://localhost:5000/user-service/deleteUser"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>

    <operation name="getPassword">
      <soap:operation soapAction="http://localhost:5000/user-service/getPassword"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>

    <operation name="getUser">
      <soap:operation soapAction="http://localhost:5000/user-service/getUser"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>

    <operation name="setAuthToken">
      <soap:operation soapAction="http://localhost:5000/user-service/setAuthToken"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>

  </binding>

  <service name="UserService">
    <port name="UserServicePort" binding="tns:UserServiceBinding">
      <soap:address location="http://localhost:5000/user-service"/>
    </port>
  </service>

</definitions>

